#!/bin/sh
TYPE="$1"
QUERY="$2"
BACKUPDIR="$HOME/.local/share/musicdl"
TMPDIR="$(mktemp -d)"
TRACKSFILE="$(mktemp -p "$TMPDIR")"
[ -n "$BITRATE" ] || BITRATE="320"
mkdir -p "$BACKUPDIR" "$TMPDIR"
case "$TYPE" in
    a|album)
        FMT_LIST='.data[]|((.artist.name+" - "+.title+.name))+" ~ "+.type+"/"+(.id|tostring)'
        TYPE="album"
        ;;
    t|track)
        FMT_LIST='.data[]|((.artist.name+" - "+.album.title+" - "+.title+.name))+" ~ "+.type+"/"+(.id|tostring)'
        TYPE="track"
        ;;
    A|artist)
        FMT_LIST='.data[]|((.name))+" ~ "+.type+"/"+(.id|tostring)'
        TYPE="artist"
        ;;
    p|playlist)
        FMT_LIST='.data[]|((.title))+" ~ "+.type+"/"+(.id|tostring)'
        TYPE="playlist"
        ;;
    url)
        URLS="$2"
        TYPE="$(echo "$URLS" | cut -d"/" -f1)"
        ;;
    rebuild)
        cd "$BACKUPDIR" || exit
        for FILE in *.tar.gz
        do
            URL="$(echo "$FILE" | sed 's/.tar.gz//g')" && musicdl url "track/$URL" &
        done
        wait
        exit
        ;;
    *)
        printf "ERROR: Invalid type.\n" && exit
esac
if [ -z "$URLS" ]
then
    QUERY="$(echo "$QUERY" | sed 's/ /%20/g')"
    URLS="$(curl -s "https://api.deezer.com/search/$TYPE?q=$QUERY&limit=30" | jq "$FMT_LIST" | fzf --no-sort --multi | cut -d"~" -f2 | sed 's/ //g' | sed 's/"//g')"
    if [ -z "$URLS" ]; then exit; fi
fi
[ "$TYPE" = "track" ] && for URL in $URLS; do echo "$URL" | cut -d"/" -f2 > "$TRACKSFILE"; done &
[ "$TYPE" = "album" ] && for URL in $URLS; do curl -s "https://api.deezer.com/$URL/tracks" | jq "(if .data then .data else .tracks.data end)[]|(.id)" > "$TRACKSFILE"; done &
[ "$TYPE" = "artist" ] && for URL in $URLS; do curl -s "https://api.deezer.com/$URL/top?limit=15" | jq "(if .data then .data else .tracks.data end)[]|(.id)" > "$TRACKSFILE"; done &
[ "$TYPE" = "playlist" ] && for URL in $URLS; do curl -s "https://api.deezer.com/$URL/tracks" | jq "(if .data then .data else .tracks.data end)[]|(.id)" > "$TRACKSFILE"; done &
while IFS= read -r ID; do
    {
        DIR="$(mktemp -d -p "$TMPDIR")"
        BACKUPFILE="$ID.tar.gz"
        test -f "$BACKUPDIR/$BACKUPFILE" && tar xf "$BACKUPDIR/$BACKUPFILE" -C "$DIR"
        test -f "$DIR"/*.mp3 && mp3val "$DIR"/*.mp3 | grep -q WARNING && rm -fv "$DIR"/*.mp3
        test -f "$DIR"/*.flac && flac -s -t "$DIR"/*.flac || rm -fv "$DIR"/*.flac
        test -f "$DIR"/*.flac || test -f "$DIR"/*.mp3 || deemix -b "$BITRATE" -p "$DIR" "https://deezer.com/track/$ID"
        test -f "$DIR"/*.flac && rm -fv "$DIR"/*.mp3
        cd "$DIR" || exit
        tar caf "$BACKUPDIR/$BACKUPFILE" ./*
        mp3val "$FILE" | grep -q WARNING && exit
        FILETAGS="$(mid3v2 -l "$FILE")"
        ARTIST="$(echo "$TAGS" | grep -i "TPE=" | sed 1q | cut -d"=" -f2 | sed "s/[:\/]/-/g" | sed 's/ *$//' | sed 's/ [ ]*/ /g' | sed 's/^ *//' | sed 's/^\.*//' | sed 's_/__g' | iconv -t ASCII)"
        DATE="$(echo "$FILETAGS" | grep -e "TDRC=" -e "TYER=" | cut -d"=" -f2 | sed 1q | cut -d- -f1)"
        ALBUM="$(echo "$TAGS" | grep -i "^TALB=" | cut -d"=" -f2 | sed "s/[:\/]/-/g" | sed 's/ *$//' | sed 's/ [ ]*/ /g' | sed 's/^ *//' | sed 's/^\.*//' | sed 's_/__g' | iconv -t ASCII)"
        TRACK="$(printf '%02d\n' "$(echo "$FILETAGS" | grep "TRCK=" | cut -d"=" -f2 | cut -d"/" -f1 | cut -d- -f1 | awk '{$0=int($0)}1')")"
        TITLE="$(echo "$TAGS" | grep  -i "^TIT2=" | cut -d"=" -f2 | sed "s/[:\/]/-/g" | sed 's/ *$//' | sed 's/ [ ]*/ /g' | sed 's/^ *//' | sed 's/^\.*//' | sed 's_/__g' | iconv -t ASCII)"
        mkdir -p "$MUSICDIR/$ARTIST/$DATE - $ALBUM"
        test -f "$MUSICDIR/$ARTIST/$DATE - $ALBUM/$TRACK - $TITLE.flac" ||
            $COPY "$FILE" "$MUSICDIR/$ARTIST/$DATE - $ALBUM/$TRACK - $TITLE.mp3" || exit
        mp3gain -s i "$MUSICDIR/$ARTIST/$DATE - $ALBUM/$TRACK - $TITLE.mp3"
        mpc update >/dev/null
        echo "$ID: Done"
    } &
done<"$TRACKSFILE"
rm -rf "$TRACKSFILE"
wait
rm -rf "$TMPDIR"
